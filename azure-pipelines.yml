
trigger:
- master

pool:
  vmImage: 'windows-2019'

variables:
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1
  inputs:
    versionSpec: '>=4.3.0'
    checkLatest: true
- task: DotNetCoreInstaller@0
  inputs:
    version: '3.0.100-preview6-012264'
- task: DotNetCoreCLI@2
  displayName: Build Fody
  inputs:
    command: 'build'
    projects: 'NetFabric.Hyperlinq.Build.Fody/NetFabric.Hyperlinq.Build.Fody.csproj'
    arguments: '--configuration $(buildConfiguration)'
- task: DotNetCoreCLI@2
  displayName: Build UnitTests
  inputs:
    command: 'build'
    projects: 'NetFabric.Hyperlinq.UnitTests/NetFabric.Hyperlinq.UnitTests.csproj'
    arguments: '--configuration $(buildConfiguration)'
- task: DotNetCoreCLI@2
  displayName: Test and Coverage
  inputs:
    command: 'test'
    projects: 'NetFabric.Hyperlinq.UnitTests/NetFabric.Hyperlinq.UnitTests.csproj'    
    arguments: '/p:CollectCoverage=true /p:Exclude="[xunit.*]*" /p:CoverletOutputFormat=cobertura /p:CoverletOutput=$(Build.SourcesDirectory)/TestResults/Coverage/'
    workingDirectory: 'NetFabric.Hyperlinq.UnitTests'
- task: DotNetCoreCLI@2
  displayName: Report Generator
  inputs:
    command: 'custom'
    projects: 'NetFabric.Hyperlinq.UnitTests/NetFabric.Hyperlinq.UnitTests.csproj'
    custom: 'reportgenerator'
    arguments: '-reports:$(Build.SourcesDirectory)/TestResults/Coverage/coverage.cobertura.xml -targetdir:$(Build.SourcesDirectory)/TestResults/Coverage/Reports'
    workingDirectory: 'NetFabric.Hyperlinq.UnitTests'
- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: 'cobertura' 
    summaryFileLocation: $(Build.SourcesDirectory)/TestResults/Coverage/**/coverage.cobertura.xml
    reportDirectory: $(Build.SourcesDirectory)/TestResults/Coverage/Reports
